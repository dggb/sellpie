<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boardMapper">
	<resultMap type="Board" id="resultBoard">
	  	<id property="bno" column="BNO" /> <!-- id는 프라이머리키 -->
	  	<result property="email" column="EMAIL"/> <!-- result는 나머지 -->
	  	<result property="bcontent" column="BCONTENT"/> 
	  	<result property="gcount" column="GCOUNT"/>
	  	<result property="rurl" column="RURL"/>
	  	<result property="isad" column="ISAD"/>
	  	<result property="delflag" column="DELFLAG"/>
	  	<result property="name" column="NAME"/>
	  	<result property="profileImg" column="PROFILE_IMG"/>
	  	<collection property="resource" column="RES" ofType="Resource" resultMap="resourceMap"/> 
	 </resultMap>

	 <resultMap type="Resource" id="resourceMap">
	      <id property="rno" column="RNO"/>
	      <result property="rsrc" column="RSRC"/>
	 </resultMap>

	<insert id="insertBoard" parameterType="Board">
		INSERT INTO BOARD VALUES(
		SEQ_BOARD_BNO.NEXTVAL, #{email}, #{bcontent}, #{gcount}, #{rurl}, #{isad},'N')
	</insert>
	
	<select id="selectfList1" parameterType="string" resultType="string">
		SELECT APPLICANT_EMAIL
		FROM ADDFRIEND 
		WHERE SUBJECT_EMAIL = #{email} AND ISAPPLY = 'Y'
	</select>
	<select id="selectfList2" parameterType="string" resultType="string">
		SELECT SUBJECT_EMAIL
		FROM ADDFRIEND 
		WHERE APPLICANT_EMAIL = #{email} AND ISAPPLY = 'Y'
	</select>
	
	<select id="selectbList" parameterType="java.util.List" resultMap="resultBoard">
		SELECT B.BNO, B.EMAIL, B.BCONTENT, B.GCOUNT, B.RURL, B.ISAD, B.DELFLAG, B.NAME, B.PROFILE_IMG, R.RSRC
		FROM (SELECT * FROM BOARD JOIN MEMBER USING(EMAIL)) B
		LEFT JOIN RESOURCES R
		ON(B.RURL = SUBSTR(R.RSRC,1,INSTR(R.RSRC,'/',-1,1)-1))
		WHERE B.DELFLAG = 'N' AND
		EMAIL IN
		<foreach collection="list" open="(" item="item" close=")" separator=",">
			#{item}
		</foreach>
		 ORDER BY BNO DESC
	</select>
	<select id="selectADList2" resultMap="resultBoard">
		SELECT B.BNO, B.EMAIL, B.BCONTENT, B.GCOUNT, B.RURL, B.ISAD, B.DELFLAG, B.NAME, B.PROFILE_IMG, R.RSRC
		FROM (SELECT * FROM BOARD JOIN MEMBER USING(EMAIL)) B
		LEFT JOIN RESOURCES R
		ON(B.RURL = SUBSTR(R.RSRC,1,INSTR(R.RSRC,'/',-1,1)-1))
		WHERE B.DELFLAG = 'Y' AND B.ISAD = 'Y'
	</select>
	
	<select id="selectlList" parameterType="_int" resultType="string">
		SELECT EMAIL
		FROM BOARD_LIKE
		WHERE BNO = #{bno}
	</select>
	
	<select id="selectBoard" parameterType="string" resultMap="resultBoard">
		SELECT B.BNO, B.EMAIL, B.BCONTENT, B.GCOUNT, B.RURL, B.ISAD, B.DELFLAG, B.NAME, B.PROFILE_IMG, R.RSRC
		FROM (SELECT * FROM BOARD JOIN MEMBER USING(EMAIL)) B
		LEFT JOIN RESOURCES R
		ON(B.RURL = SUBSTR(R.RSRC,1,INSTR(R.RSRC,'/',-1,1)-1))
		WHERE B.DELFLAG = 'N' AND
		bno = #{bno}
	</select>
	
	<select id="selectfList5" parameterType="string" resultType="String">
		SELECT EMAIL
		FROM MEMBER
		WHERE EMAIL = #{email}
	</select>
	
	<insert id="insertBlike" parameterType="hashMap">
		INSERT INTO BOARD_LIKE 
		VALUES(SEQ_BOARD_LIKE_BLNO.NEXTVAL, #{email}, #{bno})
	</insert>
	
	<update id="updateGcount" parameterType="hashMap">
		UPDATE BOARD SET GCOUNT = GCOUNT + #{signNum}
		WHERE BNO = #{bno}
	</update>
	
	<delete id="deleteBlike" parameterType="hashMap">
		DELETE FROM BOARD_LIKE
		WHERE BNO = #{bno} AND EMAIL = #{email}
	</delete>
	
	<update id="updateBoard" parameterType="Board">
		UPDATE BOARD SET BCONTENT = #{bcontent}, RURL = #{rurl}
		WHERE BNO = #{bno}
	</update>
	
	<update id="boardDelflag" parameterType="string">
	UPDATE BOARD SET DELFLAG = 'Y' WHERE BNO = #{bno}
	</update> 
	
</mapper>